#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C2_MooreZ")]
public partial class ContactsDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void UpdateTContact(TContact instance);
  partial void DeleteTContact(TContact instance);
  #endregion
	
	public ContactsDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["C2_MooreZConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ContactsDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ContactsDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ContactsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ContactsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<TContact> TContacts
	{
		get
		{
			return this.GetTable<TContact>();
		}
	}
	
	private void InsertTContact(TContact obj)
	{
		this.uspAddContact(obj.strFirstName, obj.strLastName, obj.strEmailAddress, obj.strPhoneNumber, ((System.Nullable<bool>)(obj.blnActive)));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="db_owner.uspAddContact")]
	public ISingleResult<uspAddContactResult> uspAddContact([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strFirstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strEmailAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strPhoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> blnActive)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strFirstName, strLastName, strEmailAddress, strPhoneNumber, blnActive);
		return ((ISingleResult<uspAddContactResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="db_owner.TContacts")]
public partial class TContact : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _intContactID;
	
	private string _strFirstName;
	
	private string _strLastName;
	
	private string _strEmailAddress;
	
	private string _strPhoneNumber;
	
	private bool _blnActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintContactIDChanging(int value);
    partial void OnintContactIDChanged();
    partial void OnstrFirstNameChanging(string value);
    partial void OnstrFirstNameChanged();
    partial void OnstrLastNameChanging(string value);
    partial void OnstrLastNameChanged();
    partial void OnstrEmailAddressChanging(string value);
    partial void OnstrEmailAddressChanged();
    partial void OnstrPhoneNumberChanging(string value);
    partial void OnstrPhoneNumberChanged();
    partial void OnblnActiveChanging(bool value);
    partial void OnblnActiveChanged();
    #endregion
	
	public TContact()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intContactID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int intContactID
	{
		get
		{
			return this._intContactID;
		}
		set
		{
			if ((this._intContactID != value))
			{
				this.OnintContactIDChanging(value);
				this.SendPropertyChanging();
				this._intContactID = value;
				this.SendPropertyChanged("intContactID");
				this.OnintContactIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string strFirstName
	{
		get
		{
			return this._strFirstName;
		}
		set
		{
			if ((this._strFirstName != value))
			{
				this.OnstrFirstNameChanging(value);
				this.SendPropertyChanging();
				this._strFirstName = value;
				this.SendPropertyChanged("strFirstName");
				this.OnstrFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strLastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string strLastName
	{
		get
		{
			return this._strLastName;
		}
		set
		{
			if ((this._strLastName != value))
			{
				this.OnstrLastNameChanging(value);
				this.SendPropertyChanging();
				this._strLastName = value;
				this.SendPropertyChanged("strLastName");
				this.OnstrLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmailAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string strEmailAddress
	{
		get
		{
			return this._strEmailAddress;
		}
		set
		{
			if ((this._strEmailAddress != value))
			{
				this.OnstrEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._strEmailAddress = value;
				this.SendPropertyChanged("strEmailAddress");
				this.OnstrEmailAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPhoneNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string strPhoneNumber
	{
		get
		{
			return this._strPhoneNumber;
		}
		set
		{
			if ((this._strPhoneNumber != value))
			{
				this.OnstrPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._strPhoneNumber = value;
				this.SendPropertyChanged("strPhoneNumber");
				this.OnstrPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blnActive", DbType="Bit NOT NULL")]
	public bool blnActive
	{
		get
		{
			return this._blnActive;
		}
		set
		{
			if ((this._blnActive != value))
			{
				this.OnblnActiveChanging(value);
				this.SendPropertyChanging();
				this._blnActive = value;
				this.SendPropertyChanged("blnActive");
				this.OnblnActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class uspAddContactResult
{
	
	private System.Nullable<int> _intContactID;
	
	public uspAddContactResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intContactID", DbType="Int")]
	public System.Nullable<int> intContactID
	{
		get
		{
			return this._intContactID;
		}
		set
		{
			if ((this._intContactID != value))
			{
				this._intContactID = value;
			}
		}
	}
}
#pragma warning restore 1591
